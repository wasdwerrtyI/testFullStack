import React from "react";
import "../../styles/ArticleEditor.scss";
import { useArticleEditor } from "../../hooks/useArticleEditor";
import { UploadButton } from "./UploadButton";

export function ArticleEditor({ token }) {
  const {
    title,
    setTitle,
    publishDate,
    setPublishDate,
    loading,
    error,
    editorRef,
    handleSave,
    handleImageUpload,
    handleFileUpload,
    formatText,
    insertQuote,
    insertCode,
    handleContentChange,
    handlePreview,
  } = useArticleEditor(token);

  const FORMAT_BUTTONS = [
    { action: () => formatText("bold"), label: "B", title: "–ñ–∏—Ä–Ω—ã–π" },
    { action: () => formatText("italic"), label: "I", title: "–ö—É—Ä—Å–∏–≤" },
    {
      action: () => formatText("underline"),
      label: "U",
      title: "–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π",
    },
    {
      action: () => formatText("formatBlock", "<h2>"),
      label: "H2",
      title: "–ó–∞–≥–æ–ª–æ–≤–æ–∫",
    },
    {
      action: () => formatText("formatBlock", "<h3>"),
      label: "H3",
      title: "–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫",
    },
    { action: insertQuote, label: "‚ùù", title: "–¶–∏—Ç–∞—Ç–∞" },
    { action: insertCode, label: "</>", title: "–ö–æ–¥" },
  ];

  if (loading) {
    return (
      <div className="loading">
        <div className="spinner"></div>
        <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
      </div>
    );
  }

  return (
    <div className="article-editor">
      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ */}
      {error && (
        <div className="error">
          <span className="error-icon">‚ö†Ô∏è</span>
          {error}
        </div>
      )}

      {/* –®–∞–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ */}
      <div className="editor-header">
        <input
          type="text"
          placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏"
          value={title}
          onChange={(e) => setTitle(e.target.value)}
          className="title-input"
          maxLength={120}
        />

        <div className="publish-options">
          <input
            type="datetime-local"
            value={publishDate}
            onChange={(e) => setPublishDate(e.target.value)}
            placeholder="–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"
          />
        </div>
      </div>

      {/* –ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
      <div className="toolbar">
        {FORMAT_BUTTONS.map((btn, index) => (
          <button key={index} onClick={btn.action} title={btn.title}>
            {btn.label}
          </button>
        ))}

        <UploadButton
          icon="üñºÔ∏è"
          accept="image/*"
          onChange={handleImageUpload}
          title="–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
        />

        <UploadButton
          icon="üìé"
          accept=".pdf,.doc,.docx,.txt"
          onChange={handleFileUpload}
          title="–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª"
        />
      </div>

      {/* –û–±–ª–∞—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <div
        ref={editorRef}
        className="editor-content"
        contentEditable
        onInput={handleContentChange}
        suppressContentEditableWarning
        placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏..."
      />

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="editor-actions">
        <button onClick={() => handleSave(false)} className="save-btn">
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫
        </button>

        <button onClick={() => handleSave(true)} className="publish-btn">
          –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
        </button>

        <button onClick={handlePreview} className="preview-btn">
          –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
        </button>
      </div>
    </div>
  );
}

export default ArticleEditor;
